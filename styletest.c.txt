
********** DETECTING WHITESPACE ERRORS **********
---------- Stray tab characters ----------

styletest.c:	something;	something;  /* hit */

---------- Detecting spaces used for indentation ----------

styletest.c:  something;  ### hit ###
styletest.c:  \  

---------- Alt-Space ----------

styletest.c:	Â   /* hit */

---------- Blank line(s) at top of file ----------

styletest.c:

---------- No blank line at end of file ----------


---------- General whitespace errors ----------

styletest.c:422: new blank line at EOF.


********** DETECTING INCORRECT COMMENT FORMATTING **********
---------- Incorrect trailing comment spacing ----------

styletest.c:something;// hit
styletest.c:something;/* hit */
styletest.c:something; // hit
styletest.c:something; /* hit */

---------- C++-style comments in C files ----------

styletest.c:something;// hit
styletest.c:something; // hit
styletest.c:something;  // miss [hit on C++ comments]


********** DETECTING BAD LINE CONTINUATION SPACING **********
---------- More than one space, no spaces ----------

styletest.c:#define something()  /* hit */  \
styletest.c:#define something()  /* hit */\

---------- Blank line using spaces instead of tabs ----------

styletest.c:  \  /* hit */


********** DETECTING ATTACHED else/catch **********

styletest.c:} else(something_else)  /* hit */
styletest.c:} catch(something)  /* hit */


********** DETECTING INCORRECT BRACKET SPACING **********
---------- Attached bracket ----------

styletest.c:if(something) {  /* hit */

---------- {something or {  something ----------

styletest.c:{something;  /* hit */
styletest.c:	{something;  /* hit */
styletest.c:{something;}  /* hit */
styletest.c:if(something) {  /* hit */
styletest.c:{  something;  /* hit */
styletest.c:{  something;  }  /* hit */

---------- { something ... ----------

styletest.c:{  something;  /* hit */
styletest.c:{ something;  /* hit */
styletest.c:	{ something;  /* hit */

---------- something} or something  } ----------

styletest.c:something;}  /* hit */
styletest.c:{something;}  /* hit */
styletest.c:something;  }  /* hit */
styletest.c:{  something;  }  /* hit */

---------- }something ----------

styletest.c:}something  /* hit */


********** DETECTING INCORRECT STATEMENT SPACING **********
---------- if ( ----------

styletest.c:if ()  /* hit */

---------- for ( ----------

styletest.c:for ()  /* hit */

---------- catch ( ----------

styletest.c:catch ()  /* hit */

---------- while ( ----------

styletest.c:while ()  /* hit */

---------- do ( ----------

styletest.c:do ()  /* hit */

---------- switch ( ----------

styletest.c:switch ()  /* hit */

---------- Semicolon spacing in one-liners ----------

styletest.c:do_stuff; do_other_stuff;  ### hit ###

---------- Incorrect delete array spacing ----------

styletest.c:delete[]  /* hit */


********** DETECTING INCORRECT FUNCTION/TYPE CAST SPACING **********
---------- (type*) ----------

styletest.c:	(type*)hello  /* hit */

---------- (type**) ----------

styletest.c:	(type**)hello  /* hit */

---------- (type) var ----------

styletest.c:	(type) var  ### hit ###
styletest.c:(type) var  ### hit ###
styletest.c:something + (type) var  ### hit ###
styletest.c:	return (type) var  ### hit ###
styletest.c:	((type) var  ### hit ###
styletest.c:((type) var  ### hit ###
styletest.c:return ((type) var  ### hit ###
styletest.c:(type) (var)  ### hit ###


********** DETECTING INCORRECT MACRO SPACING **********

styletest.c:#define macro \
something;  /* hit */
styletest.c:#define  macro  something  /* hit */
styletest.c:#define macro(a, b) something  /* hit */
styletest.c:#define macro(a, b)   something  /* hit */
styletest.c:#define macro something  /* hit */
styletest.c:#define macro   something  /* hit */


********** DETECTING INCORRECT COMMA SPACING **********
---------- [ ], ----------

styletest.c:comma ,comma ,down ,doobie ,doo ,down ,down ,comma ,comma  ### hit ###

---------- ,something ----------

styletest.c:comma,comma,down,doobie,doo,down,down,comma,comma  ### hit ###
styletest.c:comma ,comma ,down ,doobie ,doo ,down ,down ,comma ,comma  ### hit ###


********** DETECTING INCORRECT OPERATOR SPACING **********
---------- Incorrect pointer operator spacing ----------

styletest.c:char* something;  ### hit ###
styletest.c:something*  ### hit ###

---------- Incorrect address operator spacing ----------

styletest.c:char& something;  ### hit ###
styletest.c:something&  ### hit ###

---------- No space before other operators ----------

styletest.c:char* something;  ### hit ###
styletest.c:char& something;  ### hit ###
styletest.c:something=  ### hit ###
styletest.c:(something)=  ### hit ###
styletest.c:something[something]=  ### hit ###
styletest.c:something+=  ### hit ###
styletest.c:something-=  ### hit ###
styletest.c:something*=  ### hit ###
styletest.c:something/=  ### hit ###
styletest.c:something%=  ### hit ###
styletest.c:something&=  ### hit ###
styletest.c:something|=  ### hit ###
styletest.c:something^=  ### hit ###
styletest.c:something<<=  ### hit ###
styletest.c:something>>=  ### hit ###
styletest.c:something+  ### hit ###
styletest.c:something-  ### hit ###
styletest.c:something*  ### hit ###
styletest.c:something/  ### hit ###
styletest.c:something%  ### hit ###
styletest.c:something==  ### hit ###
styletest.c:something!=  ### hit ###
styletest.c:something>  ### hit ###
styletest.c:something<  ### hit ###
styletest.c:something>=  ### hit ###
styletest.c:something<=  ### hit ###
styletest.c:something&&  ### hit ###
styletest.c:something||  ### hit ###
styletest.c:something&  ### hit ###
styletest.c:something|  ### hit ###
styletest.c:something^  ### hit ###
styletest.c:something<<  ### hit ###
styletest.c:something>>  ### hit ###
styletest.c:something? something: something  ### hit ###

---------- No space after other operators ----------

styletest.c:=something  ### hit ###
styletest.c:=(something)  ### hit ###
styletest.c:+=something  ### hit ###
styletest.c:-=something  ### hit ###
styletest.c:*=something  ### hit ###
styletest.c:&=something  ### hit ###
styletest.c:%=something  ### hit ###
styletest.c:/=something  ### hit ###
styletest.c:|=something  ### hit ###
styletest.c:^=something  ### hit ###
styletest.c:<<=something  ### hit ###
styletest.c:>>=something  ### hit ###
styletest.c:+something  ### hit ###
styletest.c:/something  ### hit ###
styletest.c:%something  ### hit ###
styletest.c:==something  ### hit ###
styletest.c:!=something  ### hit ###
styletest.c:>something  ### hit ###
styletest.c:<something  ### hit ###
styletest.c:>=something  ### hit ###
styletest.c:<=something  ### hit ###
styletest.c:&&something  ### hit ###
styletest.c:||something  ### hit ###
styletest.c:|something  ### hit ###
styletest.c:^something  ### hit ###
styletest.c:<<something  ### hit ###
styletest.c:>>something  ### hit ###
styletest.c:something ?something :something  ### hit ###

---------- [!|~] something ----------

styletest.c:! something  /* hit */
styletest.c:~ something  /* hit */


********** DETECTING INCORRECT OPERATOR CONTINUANCE **********

styletest.c:= something  ### miss [hit on operator continuance] ###
styletest.c:= (something)  ### miss [hit on operator continuance] ###
styletest.c:+= something  ### miss [hit on operator continuance] ###
styletest.c:-= something  ### miss [hit on operator continuance] ###
styletest.c:*= something  ### miss [hit on operator continuance] ###
styletest.c:&= something  ### miss [hit on operator continuance] ###
styletest.c:%= something  ### miss [hit on operator continuance] ###
styletest.c:/= something  ### miss [hit on operator continuance] ###
styletest.c:|= something  ### miss [hit on operator continuance] ###
styletest.c:^= something  ### miss [hit on operator continuance] ###
styletest.c:<<= something  ### miss [hit on operator continuance] ###
styletest.c:>>= something  ### miss [hit on operator continuance] ###
styletest.c:+ something  ### miss [hit on operator continuance] ###
styletest.c:- something  ### miss [hit on operator continuance] ###
styletest.c:* something  ### miss [hit on operator continuance] ###
styletest.c:/ something  ### miss [hit on operator continuance] ###
styletest.c:% something  ### miss [hit on operator continuance] ###
styletest.c:| something  ### miss [hit on operator continuance] ###
styletest.c:^ something  ### miss [hit on operator continuance] ###
styletest.c:<< something  ### miss [hit on operator continuance] ###
styletest.c:>> something  ### miss [hit on operator continuance] ###
styletest.c:& something  ### miss [hit on operator continuance] ###
styletest.c:? something  ### hit ###
styletest.c:: something  ### hit ###
styletest.c:### hit ###  something ==
styletest.c:### hit ###  something !=
styletest.c:### hit ###  something >
styletest.c:### hit ###  something <
styletest.c:### hit ###  something >=
styletest.c:### hit ###  something <=
styletest.c:### hit ###  something &&
styletest.c:### hit ###  something ||


********** DETECTING INCORRECT FUNCTION SPACING **********

styletest.c:for ()  
styletest.c:catch ()  
styletest.c:while ()  
styletest.c:do ()  
styletest.c:switch ()  
styletest.c:	something (args)  ### hit ###


